{
  "title": "Units and measurements",
  "href": "http://www.google.com/design/spec/layout/units-measurements.html",
  "content": [
    {
      "type": "intro",
      "html": "<p>Some units have different meanings in different contexts. This chapter discusses the usage of device-independent pixels, scaleable pixels, as well as concepts like pixel density. </p>"
    },
    {
      "type": "article-list",
      "articles": [
        {
          "type": "article",
          "title": "Pixel density",
          "modules": [
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>The number of pixels that fit into an inch is referred to as &#x201C;pixel density.&#x201D; High-density screens have more pixels per inch than low-density ones. As a result, UI elements (such as a button) appear physically larger on low-density screens and smaller on high-density screens. </p>"
                }
              ]
            },
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>Screen resolution refers to the total number pixels in a display. </p><p><strong>screen density = screen width (or height) in pixels / screen width (or height) in </strong><strong>inches</strong></p><h4 class=\"related\">\nRelated\n</h4><div class=\"modulettes\">\n          <a class=\"modulette android\" href=\"http://developer.android.com/guide/practices/screens_support.html\" title=\"Supporting Multiple Screens\">\n      <img class=\"icon callout-icon\" src=\"http://www.google.com/design/spec/static/images/callout_android.svg\" alt=\"\">\n      <div class=\"info\">\n        <div class=\"title\">Supporting Multiple Screens</div>\n        <span class=\"subtitle\">Optimize your design for different screen densities.</span>\n      </div>\n    </a>\n      </div><div class=\"modulettes\">\n          <a class=\"modulette android\" href=\"http://developer.android.com/guide/topics/resources/more-resources.html#Dimension\" title=\"More Resource Types\">\n      <img class=\"icon callout-icon\" src=\"http://www.google.com/design/spec/static/images/callout_android.svg\" alt=\"\">\n      <div class=\"info\">\n        <div class=\"title\">More Resource Types</div>\n        <span class=\"subtitle\">Units of measure supported by Android.</span>\n      </div>\n    </a>\n      </div>"
                },
                {
                  "type": "figure-group",
                  "figures": [
                    {
                      "type": "figure",
                      "mediaType": "image",
                      "src": "media/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7N3BFUFpveGxFWVE/layout_units_density1.png",
                      "caption": "<p><br>High-density screen</p>"
                    }
                  ]
                }
              ]
            },
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": ""
                },
                {
                  "type": "figure-group",
                  "figures": [
                    {
                      "type": "figure",
                      "mediaType": "image",
                      "src": "media/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7MjdKekwta00yVFE/layout_units_density2.png",
                      "caption": "<p><br>Low-density screen</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "article",
          "title": "Density-independent pixels (dp)",
          "modules": [
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>&quot;Density independence&quot; refers to the uniform display of UI elements on screens with different densities. </p><p>Density-independent pixels (pronounced &#x201C;dips&#x201D;) are flexible units that scale to uniform dimensions on any screen. When developing an Android application, use dp to display elements uniformly on screens with different densities. </p>"
                },
                {
                  "type": "figure-group",
                  "figures": [
                    {
                      "type": "figure",
                      "mediaType": "image",
                      "src": "media/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7SE4yRmp3SWsweE0/layout_units_dp.png"
                    }
                  ]
                }
              ]
            },
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>A dp is equal to one physical pixel on a screen with a density of 160. To calculate dp:</p><p><strong>dp = (width in pixels * 160) / &#xA0;screen density</strong></p><p>When writing CSS, use px wherever dp or sp is stated. Dp only needs to be used in developing for Android.</p>"
                },
                {
                  "type": "figure-group",
                  "figures": [
                    {
                      "type": "figure"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "article",
          "title": "Scaleable pixels (sp)",
          "modules": [
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>When developing for Android, scaleable pixels (sp) serve the same function as dp, but for fonts. The default value of an sp is the same as the default value for dp. </p><p>The primary difference between an sp and a dp is that sp preserves a user&apos;s font settings. Users who have larger text settings for accessibility will see the font size matched to their text size preferences.</p>"
                }
              ]
            }
          ]
        },
        {
          "type": "article",
          "title": "Designing layouts for dp",
          "modules": [
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>When designing layouts for the screen, calculate an element&#x2019;s measurements in dp: </p><p><strong>dp = (width in pixels * 160) / density</strong></p><p>For example, a 32 x 32 px icon with a screen density of 320 equals 16 x 16 dp.</p>"
                }
              ]
            }
          ]
        },
        {
          "type": "article",
          "title": "Image scaling",
          "modules": [
            {
              "type": "module",
              "content": [
                {
                  "type": "module-body",
                  "html": "<p>Images can be scaled to look the same across different screen resolutions by using these ratios:</p>"
                },
                {
                  "type": "figure-group",
                  "figures": [
                    {
                      "type": "figure"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
